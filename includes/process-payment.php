<?php

if(isset($_POST['action']) && $_POST['action'] == 'stripe' && wp_verify_nonce($_POST['stripe_nonce'], 'stripe-nonce')) {

	global $wpdb;

	require_once( dirname(__FILE__) . '/../vendors/stripe/init.php');

	// retrieve the token generated by stripe.js
	$token = $_POST['stripeToken'];

	// attempt to charge the customer's card
	try {
		$purchase_table = $wpdb->prefix . 'dls_squares_purchase';
		$find_purchase = "SELECT * FROM $purchase_table WHERE game_id = ".$_POST['game_id']." AND coordinate = '".$_POST['coordinate']."'";
		$found_purchase = $wpdb->get_results($find_purchase);
		if (count($found_purchase))
		{
			throw new Exception("That coordinate has already been purchased!", 1);
		}
		
		\Stripe\Stripe::setVerifySslCerts(false);
		\Stripe\Stripe::setApiKey(get_option('dls_squares_ssk'));

		$game = games_get_Game($_POST['game_id']);
		
		$charge = \Stripe\Charge::create(array(
				'amount' => ($game->square_cost * 100),
				'currency' => 'usd',
				'card' => $token
			)
		);

		error_log("successfully created charge");
		error_log(print_r($charge,true));

		$current_user = wp_get_current_user();

		$purchase = array(
			'game_id' => $_POST['game_id'],
			'user_id' => $current_user->data->ID,
			'coordinate' => $_POST['coordinate']
		);

		$wpdb->insert($purchase_table, $purchase);
		
		
		// redirect on successful payment
		$redirect = add_query_arg('payment', 'paid', $_POST['redirect']);

	} catch (Exception $e) {
		// redirect on failed payment
		error_log("ERROR:".$e);			
		$redirect = add_query_arg('payment', 'failed', $_POST['redirect']);
	}

	// redirect back to our previous page with the added query variable
	wp_redirect($redirect); exit;
}